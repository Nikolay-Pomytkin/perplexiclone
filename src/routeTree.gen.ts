/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApiThreadsRouteImport } from './routes/api.threads'
import { Route as ApiAskRouteImport } from './routes/api.ask'
import { Route as ApiThreadsClearRouteImport } from './routes/api.threads.clear'
import { Route as ApiThreadsIdRouteImport } from './routes/api.threads.$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiThreadsRoute = ApiThreadsRouteImport.update({
  id: '/api/threads',
  path: '/api/threads',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAskRoute = ApiAskRouteImport.update({
  id: '/api/ask',
  path: '/api/ask',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiThreadsClearRoute = ApiThreadsClearRouteImport.update({
  id: '/clear',
  path: '/clear',
  getParentRoute: () => ApiThreadsRoute,
} as any)
const ApiThreadsIdRoute = ApiThreadsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiThreadsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api/ask': typeof ApiAskRoute
  '/api/threads': typeof ApiThreadsRouteWithChildren
  '/api/threads/$id': typeof ApiThreadsIdRoute
  '/api/threads/clear': typeof ApiThreadsClearRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api/ask': typeof ApiAskRoute
  '/api/threads': typeof ApiThreadsRouteWithChildren
  '/api/threads/$id': typeof ApiThreadsIdRoute
  '/api/threads/clear': typeof ApiThreadsClearRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/api/ask': typeof ApiAskRoute
  '/api/threads': typeof ApiThreadsRouteWithChildren
  '/api/threads/$id': typeof ApiThreadsIdRoute
  '/api/threads/clear': typeof ApiThreadsClearRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api/ask'
    | '/api/threads'
    | '/api/threads/$id'
    | '/api/threads/clear'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api/ask'
    | '/api/threads'
    | '/api/threads/$id'
    | '/api/threads/clear'
  id:
    | '__root__'
    | '/'
    | '/api/ask'
    | '/api/threads'
    | '/api/threads/$id'
    | '/api/threads/clear'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiAskRoute: typeof ApiAskRoute
  ApiThreadsRoute: typeof ApiThreadsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/threads': {
      id: '/api/threads'
      path: '/api/threads'
      fullPath: '/api/threads'
      preLoaderRoute: typeof ApiThreadsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/ask': {
      id: '/api/ask'
      path: '/api/ask'
      fullPath: '/api/ask'
      preLoaderRoute: typeof ApiAskRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/threads/clear': {
      id: '/api/threads/clear'
      path: '/clear'
      fullPath: '/api/threads/clear'
      preLoaderRoute: typeof ApiThreadsClearRouteImport
      parentRoute: typeof ApiThreadsRoute
    }
    '/api/threads/$id': {
      id: '/api/threads/$id'
      path: '/$id'
      fullPath: '/api/threads/$id'
      preLoaderRoute: typeof ApiThreadsIdRouteImport
      parentRoute: typeof ApiThreadsRoute
    }
  }
}

interface ApiThreadsRouteChildren {
  ApiThreadsIdRoute: typeof ApiThreadsIdRoute
  ApiThreadsClearRoute: typeof ApiThreadsClearRoute
}

const ApiThreadsRouteChildren: ApiThreadsRouteChildren = {
  ApiThreadsIdRoute: ApiThreadsIdRoute,
  ApiThreadsClearRoute: ApiThreadsClearRoute,
}

const ApiThreadsRouteWithChildren = ApiThreadsRoute._addFileChildren(
  ApiThreadsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiAskRoute: ApiAskRoute,
  ApiThreadsRoute: ApiThreadsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
